name: Build and deploy Node.js project to Azure Function App - fs-bb-core-node

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'  # Default path is root
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'Resolve Project Dependencies Using Npm'
        shell: bash
        run: |
          npm install
          npm run build  # Use the "build" script defined in package.json
          npm run test --if-present

      - name: Create ZIP artifact for deployment
        run: zip -r release.zip ./*  # Create zip at root level

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip  # Correct path to zip file

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./  # Download to the root

      - name: Verify that the ZIP file exists
        run: ls -la  # To check if the release.zip is present in the correct location

      - name: Unzip artifact for deployment
        run: unzip release.zip -d release  # Unzip the file

      - name: List files in release directory
        run: ls -R release  # Recursively list the contents of the release directory

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'fs-bb-core-node'
          slot-name: 'Production'
          package: './release'  # Use the unzipped folder
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_XXXX }}  # Update with your publish profile secret
          enable-oryx-build: true  # Temporarily enable Oryx build

      - name: Check Kudu Deployment Logs (Optional)
        run: |
          echo "If deployment fails, check the Kudu logs from Azure Portal."
